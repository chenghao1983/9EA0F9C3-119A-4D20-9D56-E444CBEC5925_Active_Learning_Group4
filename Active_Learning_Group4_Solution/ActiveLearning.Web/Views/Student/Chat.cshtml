@using ActiveLearning.Web.Controllers;
@using ActiveLearning.DB;

@{
    ViewBag.Title = "Chat";
}

<h2>Let's Chat</h2>
<div class="container; left" style="width:100%">
    <div style="height:400px;overflow-y:auto" id="discussionDiv">
        <ul id="discussion" style="height:380px"></ul>
    </div>
</div>
<br />
<div class="form-group-lg">
    <div class="col-sm-10">
        <input type="text" id="message" class="form-control col-sm-4" style="max-width:600px" />
        <input type="button" id="sendmessage" value="Send" class="btn-primary form-control"/>
        <input type="hidden" id="displayname" />
    </div>
</div>
<br />
<div>
    <label id="error" class="alert-danger left"></label>
</div>

@section scripts {
    <!--Reference the jQuery library. -->
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/json2.js"></script>

    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
                $('#discussionDiv').scrollTop($('#discussionDiv').prop("scrollHeight"));
            };
            // Get the user name and store it to prepend to messages.
            // $('#displayname').val(prompt('Enter your name:', ''));


            $('#displayname').val("");


            // Set initial focus to message input box.
            $('#message').focus();

            @{var studentSid = (TempData.Peek(BaseController.UserSessionParam) as User).Students.FirstOrDefault().Sid; }


            // Start the connection.
            $.connection.hub.start().done(function () {

                $('#sendmessage').click(function () {
                    $('#error').text("");
                    //if ($('#displayname').val().length == 0) {
                    //    alert("Name is empty !");
                    //    return;
                    //}
                    if ($('#message').val().trim().length == 0) {
                        //alert("Please enter something");
                        $('#error').text("Please enter something");
                        return;
                    }
                    // Call the Send method on the hub.
                    chat.server.send(@Model, @studentSid, $('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                    $('#discussionDiv').scrollTop($('#discussionDiv').prop("scrollHeight"));
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        $(document).ready(function(){
            $('#message').keypress(function(e){
                if(e.keyCode==13)
                    $('#sendmessage').click();
            });
        });
    </script>
}

